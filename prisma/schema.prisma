generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Trip {
  id          String   @id @default(uuid())
  name        String
  location    String
  locationDescription String @default("Lorem ipsum dolor sit amet, consectetur adipiscing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.")
  startDate   DateTime
  endDate     DateTime
  pricePerDay Decimal  @db.Decimal(8, 2)
  description String
  coverImage  String
  imagesUrl    String[]
  highligths  String[]
  maxGuests   Int
  countryCode String
  recommended Boolean  @default(false)
  highlights          String[]
  reservations TripReservation[]
}


model TripReservation {
  id     String @id @default(uuid())
  tripId String
  trip   Trip   @relation(fields: [tripId], references: [id])
  startDate DateTime
  endDate   DateTime
  userId String
  user   User   @relation(fields: [userId], references: [id])
}

// https://authjs.dev/reference/adapter/prisma

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  reservations TripReservation[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

//remember npx prisma migrate dev --name auth
//npx prisma format
//npx prisma studio
//npx prisma db seed

